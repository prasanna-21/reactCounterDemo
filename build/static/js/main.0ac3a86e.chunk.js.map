{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","totalCounters","console","log","className","href","Counter","this","getClasses","style","fontSize","findCount","onClick","props","onIncreament","counter","onDecreament","disabled","value","onDelete","id","classes","Component","Counters","onReset","counters","map","App","state","handleIncreament","index","indexOf","setState","handleDecreament","handleReset","c","handleDelete","counterId","countersArr","filter","Fragment","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ac3a86e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n// class Navbar extends Component {\r\n//   render() {\r\n//     return (\r\n//       <nav className=\"navbar navbar-light bg-light\">\r\n//         <a className=\"navbar-brand\" href=\"#\">\r\n//           Navbar{\" \"}\r\n//           <span className=\"badge badge-pill badge-secondary\">\r\n//             {this.props.totalCounters}\r\n//           </span>\r\n//         </a>\r\n//       </nav>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Navbar;\r\n\r\n//stateless functional components\r\nconst Navbar = ({ totalCounters }) => {\r\n  console.log(\"Navbar-rendered\");\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light\">\r\n      {\" \"}\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        Navbar{\" \"}\r\n        <span className=\"badge badge-pill badge-secondary\">\r\n          {totalCounters}{\" \"}\r\n        </span>{\" \"}\r\n      </a>{\" \"}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  //remove local data\r\n  // state = {\r\n  //   count: this.props.value,\r\n  // };\r\n  // console.log(this);\r\n  //bind method return this object\r\n  // this.handleIncreament = this.handleIncreament.bind(this);\r\n\r\n  // handleIncreament = () => {\r\n  //   // console.log(\"increament button cliked\", this);\r\n\r\n  //   this.setState({ count: this.state.count + 1 });\r\n  // };\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"counter-updated\");\r\n  }\r\n  componentWillUnmount() {\r\n    console.log(\"counter-unmounted\");\r\n  }\r\n  render() {\r\n    // let classes = this.getClasses();\r\n\r\n    // console.log(\"properties\", this.props);\r\n    console.log(\"Counter-rendered\");\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-1\">\r\n          <span className={this.getClasses()} style={{ fontSize: 20 }}>\r\n            {this.findCount()}\r\n          </span>\r\n        </div>\r\n        <div className=\"col\">\r\n          <button\r\n            onClick={() => this.props.onIncreament(this.props.counter)}\r\n            className=\"btn btn-secondary bt-sm \"\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            onClick={() => this.props.onDecreament(this.props.counter)}\r\n            className=\"btn btn-secondary bt-sm m-2 \"\r\n            disabled={this.props.counter.value === 0 ? \"disabled\" : \"\"}\r\n          >\r\n            -\r\n          </button>\r\n          <button\r\n            onClick={() => this.props.onDelete(this.props.counter.id)}\r\n            className=\"btn btn-danger bt-sm \"\r\n          >\r\n            delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  getClasses() {\r\n    let classes = \"badge m-2 badge\";\r\n    classes += this.props.counter.value === 0 ? \"-warning\" : \"-primary\";\r\n    return classes;\r\n  }\r\n\r\n  findCount() {\r\n    //object destructering\r\n    const { value } = this.props.counter;\r\n    // const ele = <h3>Zero</h3>;\r\n    return value === 0 ? \"zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n// import App from \"../App\";\r\n\r\nclass Counters extends Component {\r\n  render() {\r\n    console.log(\"Counters-rendered\");\r\n    const {\r\n      onReset,\r\n      counters,\r\n      onDelete,\r\n      onIncreament,\r\n      onDecreament,\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <button onClick={onReset} className=\"btn btn-primary bt-sm m-2\">\r\n          Reset\r\n        </button>\r\n        {counters.map((counter) => (\r\n          <Counter\r\n            key={counter.id}\r\n            // onDelete={() => this.handleDelete(counter.id)}\r\n            onIncreament={onIncreament}\r\n            onDecreament={onDecreament}\r\n            onDelete={onDelete}\r\n            // value={counter.value}\r\n            // id={counter.id}\r\n\r\n            counter={counter}\r\n          >\r\n            <h5>Counter # {counter.id}</h5>\r\n          </Counter>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import \"./App.css\";\nimport Navbar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nimport React, { Component } from \"react\";\n// import reactDom from \"react-dom\";\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 0, value: 0 },\n      { id: 1, value: 1 },\n      { id: 2, value: 2 },\n    ],\n  };\n\n  constructor() {\n    super();\n    console.log(\"App-constructor\");\n  }\n  handleIncreament = (counter) => {\n    console.log(\"increamnet event hanleded\");\n    let counters = [...this.state.counters];\n    console.log(counters);\n    let index = counters.indexOf(counter);\n    counters[index].value++;\n\n    this.setState({ counters: counters });\n  };\n\n  handleDecreament = (counter) => {\n    console.log(\"increamnet event hanleded\");\n    let counters = [...this.state.counters];\n    console.log(counters);\n    let index = counters.indexOf(counter);\n    counters[index].value--;\n\n    this.setState({ counters: counters });\n  };\n\n  handleReset = () => {\n    let counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters: counters });\n  };\n  handleDelete = (counterId) => {\n    let countersArr = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters: countersArr });\n  };\n  componentDidMount() {\n    console.log(\"App-mounted\");\n  }\n  render() {\n    console.log(\"App-rendered\");\n    return (\n      <React.Fragment>\n        <Navbar\n          totalCounters={this.state.counters.filter((c) => c.value > 0).length}\n        />\n        <main className=\"container\">\n          <Counters\n            counters={this.state.counters}\n            onReset={this.handleReset}\n            onIncreament={this.handleIncreament}\n            onDecreament={this.handleDecreament}\n            onDelete={this.handleDelete}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n// import Counter from \"./components/counter\";\n//\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}